{
  "input": "Write a function that validates email addresses using regex",
  "code": "Certainly! Here's a Python function that validates email addresses using a regular expression (regex). The regex pattern follows a widely accepted standard for email validation, balancing between accuracy and complexity, while being mindful of potential security considerations.\n\n```python\nimport re\n\ndef is_valid_email(email: str) -> bool:\n    \"\"\"\n    Validates an email address using regex.\n    \n    Args:\n        email (str): The email address to validate.\n        \n    Returns:\n        bool: True if the email is valid, False otherwise.\n    \"\"\"\n    # Define a regex pattern for validating an email\n    # This pattern matches most common email formats, but does not cover all edge cases\n    email_regex = re.compile(\n        r\"^(?P<local>[^@]+)@(?P<domain>[^@]+\\.[^@]+)$\"\n    )\n    \n    # Perform match\n    match = email_regex.match(email)\n    if not match:\n        return False\n\n    local_part = match.group('local')\n    domain_part = match.group('domain')\n    \n    # Additional checks can be added if needed, e.g., length checks, allowed characters, etc.\n    \n    # For security, ensure that the email doesn't contain newline characters which could lead to injection issues\n    if '\\n' in email or '\\r' in email:\n        return False\n\n    return True\n\n# Example usage:\n# print(is_valid_email(\"user@example.com\"))  # Should return True\n# print(is_valid_email(\"invalid-email\"))     # Should return False\n```\n\n### Security considerations:\n- The regex used is simple and avoids overly complex patterns that could lead to performance issues.\n- Inputs are checked for newline characters to prevent injection vulnerabilities, such as header injection if the email is used in a context like email headers.\n- Remember, regex validation is a good first step but not foolproof \u2014 for comprehensive validation, consider using dedicated email validation libraries or actual email verification techniques (e.g., sending a confirmation email).\n\nLet me know if you'd like a more strict regex pattern or additional validation logic!"
}